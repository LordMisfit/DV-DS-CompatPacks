ACTOR GoldWandPuff1New : GoldWandPuff1 { DamageType "Magic" }
ACTOR GoldWandPuff2New : GoldWandPuff2 { DamageType "Magic" }
ACTOR GoldWandFX1New : GoldWandFX1 { DamageType "Magic" }
ACTOR GoldWandFX2New : GoldWandFX2 { DamageType "Magic" }

ACTOR GoldWandNew : GoldWand replaces GoldWand
{
  Weapon.AmmoType1 "GoldWandAmmo"
  Weapon.AmmoType2 "GoldWandAmmo"
  Weapon.AmmoUse1 1  
  Weapon.AmmoUse2 1  
  States
  {
  Spawn:
    GWAN A 0 NoDelay
	{
	 if (CountInv("GoldWandNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualGoldWandNew");
	  A_FadeOut(1,1);
	 }
	}
    GWAN A 1
    Loop
  Despawn:
    GWAN A 0
    Stop
  Ready:
    GWND A 1 A_WeaponReady
    Loop
  Deselect:
    GWND A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    GWND A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    GWND B 3 
    GWND C 5 // A_FireGoldWandPL1
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
	 }
	}
    GWND D 3
    GWND D 0 A_ReFire
    Goto Ready
  AltFire:
    GWND B 3 
    GWND C 4 // A_FireGoldWandPL2
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
	 }
	}
    GWND D 3
    GWND D 0 A_ReFire
    Goto Ready
  }
}

ACTOR DualGoldWandNew : GoldWandNew
{
  Weapon.AmmoType1 "GoldWandAmmo"
  Weapon.AmmoType2 "GoldWandAmmo"
  Weapon.AmmoUse1 1  
  Weapon.AmmoUse2 1  
  Tag "Dual Elven Wands"
  States
  {
  Spawn:
    GWAN A -1
    Stop
  Ready:
    GWN2 A 1 A_WeaponReady
    Loop
  Deselect:
    GWN2 A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    GWN2 A 1 { A_Raise; A_Raise; }
    Loop
  Fire: // 11 Frames
    GWN2 B 3 
    GWN2 CD 5 // A_FireGoldWandPL1
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1New",1); A_PlaySound("weapons/wandhit",1);
	 }
	}
    GWN2 E 3

    GWN2 E 0 A_ReFire
    Goto Ready
  AltFire: // 10 Frames
    GWN2 B 3 
    GWN2 CD 4 // A_FireGoldWandPL2
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,0); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2New",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2New",0);
 	  A_FireCustomMissile("GoldWandFX2New",0,1); A_PlaySound("weapons/wandhit",1);
      A_SetAngle(angle-5.625);
	 }
	}
    GWN2 E 3

    GWN2 E 0 A_ReFire
    Goto Ready
  }
}

ACTOR CrossbowFX1New : CrossbowFX1 { DamageType "Magic" }
ACTOR CrossbowFX2New : CrossbowFX2 { DamageType "Magic" }
ACTOR CrossbowFX3New : CrossbowFX3 { DamageType "Magic" }

ACTOR CrossbowNew : Crossbow replaces Crossbow
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoType1 "CrossbowAmmo"
  Weapon.AmmoType2 "CrossbowAmmo"
  States
  {
  Spawn:
    WBOW A 0 NoDelay
	{
	 if (CountInv("CrossbowNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualCrossbowNew");
	  A_FadeOut(1,1);
	 }
	}
    WBOW A 1
    Loop
  Ready:
    CRBW AAAAAABBBBBBCCCCCC 1 A_WeaponReady
    Loop
  Deselect:
    CRBW A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    CRBW A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    CRBW D 6 // A_FireCrossbowPL1
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX1New",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX1New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile ("CrossbowFX1New",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5, 0,  2, 3);
	 }
	}
    CRBW EFGH 3
    CRBW AB 4
    CRBW C 5 A_ReFire
    Goto Ready
  AltFire:
    CRBW D 5 // A_FireCrossbowPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX2New",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX2New",    0, 0,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile ("CrossbowFX2New",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9, 0,  4, 3);
	 }
	}
    CRBW E 3
    CRBW F 2
    CRBW G 3
    CRBW H 2
    CRBW A 3
    CRBW B 3
    CRBW C 4 A_ReFire
    Goto Ready
  }
}

ACTOR DualCrossbowNew : CrossbowNew
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoType1 "CrossbowAmmo"
  Weapon.AmmoType2 "CrossbowAmmo"
  Tag "Dual Ethereal Crossbows"

  States
  {
  Spawn:
    WBOW A -1
    Stop
  Ready:
    CRBD AAAAAABBBBBBCCCCCC 1 A_WeaponReady
    Loop
  Deselect:
    CRBD A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    CRBD A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    CRBD D 6 // A_FireCrossbowPL1
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 1,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 1,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile ("CrossbowFX1New",    0-4, 1,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5-4, 0,  2-2, 3);
	 }
	}
    CRBD E 6 // A_FireCrossbowPL1
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 1,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 1,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile ("CrossbowFX1New",    0+4, 1,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX3New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",  4.5+4, 0,  2+2, 3);
	 }
	}
    CRBD FGH 3
    CRBD AB 4
    CRBD C 5 A_ReFire
    Goto Ready
  AltFire:
    CRBD D 5 // A_FireCrossbowPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 1,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 1,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 0,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile ("CrossbowFX2New",    0-4, 1,  0-2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5-4, 0, -2-2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5-4, 0,  2-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9-4, 0, -4-2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9-4, 0,  4-2, 3);
	 }
	}
    CRBD E 5 // A_FireCrossbowPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 1,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 1,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 0,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile ("CrossbowFX2New",    0+4, 1,  0+2, 3);
      A_FireCustomMissile ("CrossbowFX2New", -4.5+4, 0, -2+2, 3);
      A_FireCustomMissile ("CrossbowFX2New",  4.5+4, 0,  2+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",   -9+4, 0, -4+2, 3);
      A_FireCustomMissile ("CrossbowFX3New",    9+4, 0,  4+2, 3);
	 }
	}
    CRBD F 3
    CRBD G 2
    CRBD H 3
    CRBD A 3
    CRBD B 3
    CRBD C 4 A_ReFire
    Goto Ready
  }
}

ACTOR RipperNew : Ripper { DamageType "Magic" }
ACTOR BlasterPuffNew : BlasterPuff { DamageType "Magic" }
ACTOR BlasterFX1New : BlasterFX1 
{
  DamageType "Magic"
  States
  {
  Spawn:
    ACLO E 200
    Loop
  Death:
    FX18 A 3 Bright // A_SpawnRippers
	{
     A_CustomMissile("RipperNew",0,0,  0,6);
     A_CustomMissile("RipperNew",0,0, 45,6);
     A_CustomMissile("RipperNew",0,0, 90,6);
     A_CustomMissile("RipperNew",0,0,135,6);
     A_CustomMissile("RipperNew",0,0,180,6);
     A_CustomMissile("RipperNew",0,0,225,6);
     A_CustomMissile("RipperNew",0,0,270,6);
     A_CustomMissile("RipperNew",0,0,315,6);
	}
    FX18 B 3 Bright
    FX18 CDEFG 4 Bright
    Stop
  }
}

ACTOR DragonClawNew : Blaster replaces Blaster
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "BlasterAmmo"
  Weapon.AmmoType2 "BlasterAmmo"
  States
  {
  Spawn:
    WBLS A 0 NoDelay
	{
	 if (CountInv("DragonClawNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualDragonClawNew");
	  A_FadeOut(1,1);
	 }
	}
    WBLS A 1
    Loop
  Ready:
    BLSR A 1 A_WeaponReady
    Loop
  Deselect:
    BLSR A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    BLSR A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    BLSR BC 3
  Hold:
    BLSR D 2 // A_FireBlasterPL1
    {
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
	 }
	}
    BLSR CB 2
    BLSR A 0 A_ReFire
    Goto Ready
  AltFire:
    TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
    BLSR BC 0
  AltHold:
    BLSR D 3 
	{
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/blastershoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
  	  A_FireCustomMissile("BlasterFX1New",0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      A_SetAngle(angle-15);
  	  A_FireCustomMissile("BlasterFX1New",0,1);
      A_SetAngle(angle-15);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
  	  A_FireCustomMissile("BlasterFX1New",0,1);
	 }
	}
    BLSR CB 4
    BLSR A 0 A_ReFire
    Goto Ready
  }
}

ACTOR DualDragonClawNew : DragonClawNew
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "BlasterAmmo"
  Weapon.AmmoType2 "BlasterAmmo"
  Tag "Dual Dragon Claws"
  States
  {
  Spawn:
    WBLS A -1
    Stop
  Ready:
    DBLS A 1 A_WeaponReady
    Loop
  Deselect:
    DBLS A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    DBLS A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    DBLS BC 3
  Hold:
    DBLS DE 2 // A_FireBlasterPL1
    {
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/blastershoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",0); A_PlaySound("weapons/blastershoot",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuffNew",1); A_PlaySound("weapons/blastershoot",1);
	 }
	}
    DBLS FG 2
    DBLS A 0 A_ReFire
    Goto Ready
  AltFire:
    DBLS BC 0
  AltHold:
    DBLS DE 3 
	{
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/blastershoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
  	  A_FireCustomMissile("BlasterFX1New",0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      A_SetAngle(angle-15);
  	  A_FireCustomMissile("BlasterFX1New",0,1);
      A_SetAngle(angle-15);
  	  A_FireCustomMissile("BlasterFX1New",0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
  	  A_FireCustomMissile("BlasterFX1New",0,1);
	 }
	}
    DBLS FG 4
    DBLS A 0 A_ReFire
    Goto Ready
  }
}

ACTOR HornRodFX1New : HornRodFX1 
{ 
  DamageType "Magic" 
  SeeSound ""
  States
  {
  Idle:
    FX00 A 0 NoDelay A_Jump(128,2)
  Spawn:
    FX00 AB 6 Bright
    Loop
  }	
}
ACTOR HornRodFX2New : HornRodFX2 
{ 
  var int user_fuse;
  DamageType "Acid"
  DamageType "Magic" 
  +SEEKERMISSILE
  States
  {
  Spawn:
    FX00 C 0 Bright NoDelay A_ScaleVelocity(1.0625)
    FX00 C 0 Bright A_SetUserVar("user_fuse",random(120,160))
    FX00 C 3 Bright
    FX00 D 3 Bright A_SeekerMissile(10,30,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,96,32)
    FX00 E 3 Bright
    FX00 F 3 Bright A_SeekerMissile(10,30,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,96,32)
    Loop
  Death:
    FX00 H 5 Bright // A_AddPlayerRain
    FX00 I 5 Bright A_Explode(16+random(-9,9),32,0)
    FX00 J 4 Bright
    FX00 KLM 3 Bright
    FX00 G 1 A_HideInCeiling
//  Wait
  RainLoop:
    FX00 G 0 // A_SkullRodStorm
	{
     A_SpawnItemEx("RainPillarNew",random(-64,64),random(-64,64),-4,random(-0.25,0.25),random(-0.25,0.25),random(-14,-10),0,SXF_NOCHECKPOSITION,16);
     A_SpawnItemEx("RainPillarNew",random(-64,64),random(-64,64),-4,random(-0.25,0.25),random(-0.25,0.25),random(-14,-10),0,SXF_NOCHECKPOSITION,248);
     A_SetUserVar("user_fuse",user_fuse-1);
    }
    FX00 G 1 A_JumpIf(user_fuse<=0,"End")
    Loop
  End:
    TNT1 A 0 A_FadeOut(1)
    stop
  }
}
ACTOR RainPillarNew : RainPillar replaces RainPillar { DamageType "Magic" }

ACTOR HellStaffNew : SkullRod replaces SkullRod
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "SkullRodAmmo"
  Weapon.AmmoType2 "SkullRodAmmo"

  States
  {
  Spawn:
    WSKL A 0 NoDelay
	{
	 if (CountInv("HellStaffNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualHellStaffNew");
	  A_FadeOut(1,1);
	 }
	}
    WSKL A 1
    Loop
  Ready:
    HROD A 1 A_WeaponReady
    Loop
  Deselect:
    HROD A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    HROD A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    HROD AB 4 // A_FireSkullRodPL1
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/hornrodshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("HornRodFX1New",0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireCustomMissile("HornRodFX1New",0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireCustomMissile("HornRodFX1New",0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("HornRodFX1New",0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireCustomMissile("HornRodFX1New",0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireCustomMissile("HornRodFX1New",0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("HornRodFX1New",0,0);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("HornRodFX1New",0,0);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("HornRodFX1New",0,1);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("HornRodFX1New",0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireCustomMissile("HornRodFX1New");
	 }
	}
    HROD B 0 A_ReFire
    Goto Ready
  AltFire:
    HROD C 2
    HROD D 3
    HROD E 2
    HROD F 3
    HROD G 4 // A_FireSkullRodPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/hornrodpowshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  A_FireCustomMissile("HornRodFX2New",0,0,0,0,1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  A_FireCustomMissile("HornRodFX2New",0,0,0,0,1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  A_FireCustomMissile("HornRodFX2New",0,0,0,0,1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  A_FireCustomMissile("HornRodFX2New",0,1,0,0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  A_FireCustomMissile("HornRodFX2New",0,0,0,0,1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  A_FireCustomMissile("HornRodFX2New",0,0,0,0,1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  A_FireCustomMissile("HornRodFX2New",0,0,0,0,1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  A_FireCustomMissile("HornRodFX2New",0,0,0,0,1);
      A_SetAngle(angle-15);
	  A_FireCustomMissile("HornRodFX2New",0,1,0,0,1);
      A_SetAngle(angle-15);
	  A_FireCustomMissile("HornRodFX2New",0,0,0,0,1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  A_FireCustomMissile("HornRodFX2New",0,1,0,0,1);
	 }
	}
    HROD F 2
    HROD E 3
    HROD D 2
    HROD C 2 A_ReFire
    Goto Ready
  }
}

ACTOR DualHellStaffNew : HellStaffNew
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "SkullRodAmmo"
  Weapon.AmmoType2 "SkullRodAmmo"
  Tag "Dual HellStaves"

  States
  {
  Spawn:
    WSKL A -1
    Stop
  Ready:
    DHRD A 1 A_WeaponReady
    Loop
  Deselect:
    DHRD A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    DHRD A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    DHRD AB 4 // A_FireSkullRodPL1
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/hornrodshoot",1);
     A_PlaySound("weapons/hornrodshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("HornRodFX1New",3,0,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,0,-3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireCustomMissile("HornRodFX1New",3,0,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,0,-3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireCustomMissile("HornRodFX1New",3,0,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,0,-3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("HornRodFX1New",3,1,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,1,-3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireCustomMissile("HornRodFX1New",3,0,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,0,-3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireCustomMissile("HornRodFX1New",3,0,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,0,-3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("HornRodFX1New",3,0,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,0,-3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("HornRodFX1New",3,0,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,0,-3);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("HornRodFX1New",3,1,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,1,-3);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("HornRodFX1New",3,0,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,0,-3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireCustomMissile("HornRodFX1New",3,1,3);
 	  A_FireCustomMissile("HornRodFX1New",-3,1,-3);
	 }
	}
    DHRD B 0 A_ReFire
    Goto Ready
  AltFire:
    DHRD C 2
    DHRD D 3
    DHRD E 2
    DHRD F 3
    DHRD G 4 // A_FireSkullRodPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/hornrodpowshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  A_FireCustomMissile("HornRodFX2New",3,0,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,0,-3,0,1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  A_FireCustomMissile("HornRodFX2New",3,0,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,0,-3,0,1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  A_FireCustomMissile("HornRodFX2New",3,0,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,0,-3,0,1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  A_FireCustomMissile("HornRodFX2New",3,1,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,1,-3,0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  A_FireCustomMissile("HornRodFX2New",3,0,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,0,-3,0,1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  A_FireCustomMissile("HornRodFX2New",3,0,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,0,-3,0,1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  A_FireCustomMissile("HornRodFX2New",3,0,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,0,-3,0,1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  A_FireCustomMissile("HornRodFX2New",3,0,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,0,-3,0,1);
      A_SetAngle(angle-15);
	  A_FireCustomMissile("HornRodFX2New",3,1,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,1,-3,0,1);
      A_SetAngle(angle-15);
	  A_FireCustomMissile("HornRodFX2New",3,0,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,0,-3,0,1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  A_FireCustomMissile("HornRodFX2New",3,1,3,0,1);
	  A_FireCustomMissile("HornRodFX2New",-3,1,-3,0,1);
	 }
	}
    DHRD F 2
    DHRD E 3
    DHRD D 2
    DHRD C 2 A_ReFire
    Goto Ready
  }
}

ACTOR PhoenixFX1NoAOE : PhoenixFX1 // Spread shots of Phoenix Rod, cannot deal self-AOE [necessary due to how Spreader Aura spreads out extra shots]
{
  DamageType "Magic"
  DamageType "Fire"
  States
  {
  Death:
    FX08 A 6 Bright A_Explode(128,128,0)
    FX08 BC 5 Bright
    FX08 DEFGH 4 Bright
    Stop
  }
}

ACTOR PhoenixFX1New : PhoenixFX1
{
  DamageType "Magic"
  DamageType "Fire"
}
ACTOR PhoenixFX2New : PhoenixFX2
{
  DamageType "Magic"
  DamageType "Fire"
}

ACTOR PhoenixRodNew : PhoenixRod replaces PhoenixRod
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoType1 "PhoenixRodAmmo"
  Weapon.AmmoType2 "PhoenixRodAmmo"

  States
  {
  Spawn:
    WPHX A 0 NoDelay
	{
	 if (CountInv("PhoenixRodNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualPhoenixRodNew");
	  A_FadeOut(1,1);
	 }
	}
    WPHX A 1
    Loop
  Ready:
    PHNX A 1 A_WeaponReady
    Loop
  Deselect:
    PHNX A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    PHNX A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    PHNX B 5
    PHNX C 7
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("PhoenixFX1New",0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",0,0);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",0,0);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("PhoenixFX1New",0,1);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireCustomMissile("PhoenixFX1New",0,1);
	 }
     A_Recoil(4);
	}
    PHNX DB 4
    PHNX B 0 A_ReFire
    Goto Ready
  AltFire:
    PHNX B 3 // A_InitPhoenixPL2
	{
     ACS_NamedExecuteWithResult("FlameCount",0,350);
	}
  AltHold:
    PHNX C 1 // A_FirePhoenixPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireCustomMissile("PhoenixFX2New",random(-2,2),0,random(-2,2),0,1,2);
	 }
	 A_PlaySound("weapons/phoenixpowshoot",1,1.0,1);
     ACS_NamedExecuteWithResult("FlameCount",1,-1);
	}
    PHNX B 0 A_JumpIf(ACS_NamedExecuteWithResult("FlameCount",2) < 1, "AltPowerdown")
    PHNX B 4 A_ReFire
  AltPowerdown:
    PHNX B 4 // A_ShutdownPhoenixPL2
	{
	 A_TakeInventory("PhoenixRodAmmo",1,TIF_NOTAKEINFINITE,AAPTR_PLAYER1);
     ACS_NamedExecuteWithResult("FlameCount",0,350);
	 A_StopSound(1);
	}
    Goto Ready
  }
}

ACTOR DualPhoenixRodNew : PhoenixRodNew
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoType1 "PhoenixRodAmmo"
  Weapon.AmmoType2 "PhoenixRodAmmo"
  Tag "Dual Phoenix Rods"

  States
  {
  Spawn:
    WPHX A -1
    Stop
  Ready:
    PHND A 1 A_WeaponReady
    Loop
  Deselect:
    PHND A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    PHND A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    PHND B 5
    PHND C 7
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",-3,0,-3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",-3,0,-3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",-3,0,-3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("PhoenixFX1New",3,1,3);
 	  A_FireCustomMissile("PhoenixFX1New",-3,1,-3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",-3,0,-3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",-3,0,-3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",-3,0,-3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",-3,0,-3);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("PhoenixFX1New",3,1,3);
 	  A_FireCustomMissile("PhoenixFX1New",-3,1,-3);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",3,0,3);
 	  A_FireCustomMissile("PhoenixFX1NoAOE",-3,0,-3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireCustomMissile("PhoenixFX1New",3,1,3);
 	  A_FireCustomMissile("PhoenixFX1New",-3,1,-3);
	 }
     A_Recoil(9);
	}
    PHND DB 4
    PHND B 0 A_ReFire
    Goto Ready
  AltFire:
    PHND B 3 // A_InitPhoenixPL2
	{
     ACS_NamedExecuteWithResult("FlameCount",0,350);
	}
  AltHold:
    PHND C 1 // A_FirePhoenixPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      A_SetAngle(angle-15);
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
      A_SetAngle(angle+15);
	 }
	 else
	 {
 	  A_FireCustomMissile("PhoenixFX2New",random(-5,-1),0,random(-5,1),0,1,2);
 	  A_FireCustomMissile("PhoenixFX2New",random(1,5),0,random(1,5),0,1,2);
	 }
	 A_PlaySound("weapons/phoenixpowshoot",1,1.0,1);
     ACS_NamedExecuteWithResult("FlameCount",1,-1);
	}
    PHND B 0 A_JumpIf(ACS_NamedExecuteWithResult("FlameCount",2) < 1, "AltPowerdown")
    PHND B 4 A_ReFire
  AltPowerdown:
    PHND B 4 // A_ShutdownPhoenixPL2
	{
	 A_TakeInventory("PhoenixRodAmmo",2,TIF_NOTAKEINFINITE,AAPTR_PLAYER1);
     ACS_NamedExecuteWithResult("FlameCount",0,350);
	 A_StopSound(1);
	}
    Goto Ready
  }
}

ACTOR MaceFX1New : MaceFX1
{
  DamageType "Magic"
  SeeSound ""
  var int user_special1;
  States
  {
  Spawn:
    FX02 A 0 NoDelay A_SetUserVar("user_special1",16)
  Idle:
    FX02 AB 4 //A_MacePL1Check
	{
     if (user_special1 > 0)
	 {
	  A_SetUserVar("user_special1",user_special1-4);
	 }
	 else
     if (user_special1 == 0)
	 {
	  A_SetUserVar("user_special1",-4); A_Recoil(-7); A_ChangeFlag("NOGRAVITY",0); A_SetGravity(0.125); A_SetFloatSpeed(2); 
	 }
	 else
     if (user_special1 <= -4)
	 {
	  A_ChangeFlag("NOGRAVITY",0); A_SetGravity(0.125); A_SetFloatSpeed(2); 
	 }
	}
    Loop
  Death:
    FX02 F 4 Bright A_MaceBallImpact
    FX02 GHIJ 4 Bright
    Stop
  }
}
ACTOR MaceFX2New : MaceFX2 { DamageType "Magic" }
ACTOR MaceFX3New : MaceFX3 { DamageType "Magic" }
ACTOR MaceFX4New : MaceFX4 { DamageType "Magic"}

ACTOR FiremaceNew : Mace replaces Mace
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "MaceAmmo"
  Weapon.AmmoType2 "MaceAmmo"

  States
  {
  Spawn:
    WBLS A 0 NoDelay
	{
	 if (CountInv("FiremaceNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualFiremaceNew");
	  A_FadeOut(1,1);
	 }
	}
    WMCE A 1
    Loop
  Ready:
    MACE A 1 A_WeaponReady
    Loop
  Deselect:
    MACE A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    MACE A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    MACE B 4
  Hold:
    MACE CDEF 3
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/maceshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,0,0,0,0,2); }
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,0,0,0,0,2); }
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,0,0,0,0,2); }
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),1,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,1,0,0,0,2); }
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,0,0,0,0,2); }
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,0,0,0,0,2); }
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,0,0,0,0,2); }
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,0,0,0,0,2); }
      A_SetAngle(angle-15);
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),1,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,1,0,0,0,2); }
      A_SetAngle(angle-15);
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),0,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,0,0,0,0,2); }
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  if (random(1,100) <= 89) { A_FireCustomMissile("MaceFX1New",random(-4.21875,4.21875),1,0,0,0,0); } else { A_FireCustomMissile("MaceFX2New",0,1,0,0,0,2); }
	 }
	}
    MACE C 4 A_ReFire
    MACE DEFB 4
    Goto Ready
  AltFire:
  AltHold:
    MACE B 4
    MACE D 4 // A_FireMacePL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/maceshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  A_FireCustomMissile("MaceFX4New",0,0,0,0,1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  A_FireCustomMissile("MaceFX4New",0,0,0,0,1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  A_FireCustomMissile("MaceFX4New",0,0,0,0,1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  A_FireCustomMissile("MaceFX4New",0,1,0,0,1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  A_FireCustomMissile("MaceFX4New",0,0,0,0,1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  A_FireCustomMissile("MaceFX4New",0,0,0,0,1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  A_FireCustomMissile("MaceFX4New",0,0,0,0,1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  A_FireCustomMissile("MaceFX4New",0,0,0,0,1);
      A_SetAngle(angle-15);
	  A_FireCustomMissile("MaceFX4New",0,1,0,0,1);
      A_SetAngle(angle-15);
	  A_FireCustomMissile("MaceFX4New",0,0,0,0,1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  A_FireCustomMissile("MaceFX4New",0,1,0,0,1);
	 }
	}
    MACE B 4
    MACE A 8 A_ReFire
    Goto Ready
  }
}

ACTOR DualFiremaceNew : FiremaceNew
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "MaceAmmo"
  Weapon.AmmoType2 "MaceAmmo"
  Tag "Dual Firemaces"

  States
  {
  Spawn:
    WMCE A -1
    Stop
  Ready:
    DMAC A 1 A_WeaponReady
    Loop
  Deselect:
    DMAC A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    DMAC A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    DMAC B 4
  Hold:
    DMAC CDEF 3
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/maceshoot",1);
     A_PlaySound("weapons/maceshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),1,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),1,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),1,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),1,random(0,-2),0,0,2); 
	  }
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      A_SetAngle(angle-15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),1,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),1,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),1,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),1,random(0,-2),0,0,2); 
	  }
      A_SetAngle(angle-15);
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),0,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),0,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),0,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),0,random(0,-2),0,0,2); 
	  }
      A_SetAngle(angle+15);
	 }
	 else
	 {
	  if (random(1,100) <= 89) 
	  { 
	   A_FireCustomMissile("MaceFX1New",random(-6.328125,2.109375),1,random(-3,1),0,0,0); 
	   A_FireCustomMissile("MaceFX1New",random(-2.109375,6.328125),1,random(-1,3),0,0,0); 
	  } 
	  else 
	  { 
	   A_FireCustomMissile("MaceFX2New",random(2,0),1,random(2,0),0,0,2); 
	   A_FireCustomMissile("MaceFX2New",random(0,-2),1,random(0,-2),0,0,2); 
	  }
	 }
	}
    DMAC C 4 A_ReFire
    DMAC DEFB 4
    Goto Ready
  AltFire:
  AltHold:
    DMAC B 4
    DMAC D 4 // A_FireMacePL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/maceshoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile("MaceFX4New",random(4,0),1,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),1,random(0,-4),0,0,1); 
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      A_SetAngle(angle-15);
      A_FireCustomMissile("MaceFX4New",random(4,0),1,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),1,random(0,-4),0,0,1); 
      A_SetAngle(angle-15);
      A_FireCustomMissile("MaceFX4New",random(4,0),0,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),0,random(0,-4),0,0,1); 
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile("MaceFX4New",random(4,0),1,random(4,0),0,0,1); 
      A_FireCustomMissile("MaceFX4New",random(0,-4),1,random(0,-4),0,0,1); 
	 }
	}
    DMAC B 4
    DMAC A 8 A_ReFire
    Goto Ready
  }
}