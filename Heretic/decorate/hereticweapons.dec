ACTOR GoldWandNew : GoldWand replaces GoldWand
{
  Weapon.AmmoType1 "GoldWandAmmo"
  Weapon.AmmoType2 "GoldWandAmmo"
  Weapon.AmmoUse1 1  
  Weapon.AmmoUse2 1  
  States
  {
  Spawn:
    GWAN A 0 NoDelay
	{
	 if (CountInv("GoldWandNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualGoldWandNew");
	  A_FadeOut(1,1);
	 }
	}
    GWAN A 1
    Loop
  Despawn:
    GWAN A 0
    Stop
  Ready:
    GWND A 1 A_WeaponReady
    Loop
  Deselect:
    GWND A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    GWND A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    GWND B 3 
    GWND C 5 // A_FireGoldWandPL1
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/wandhit",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
	 }
	}
    GWND D 3
    GWND D 0 A_ReFire
    Goto Ready
  AltFire:
    GWND B 3 
    GWND C 4 // A_FireGoldWandPL2
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/wandhit",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
	 }
	}
    GWND D 3
    GWND D 0 A_ReFire
    Goto Ready
  }
}

ACTOR DualGoldWandNew : GoldWandNew
{
  Weapon.AmmoType1 "GoldWandAmmo"
  Weapon.AmmoType2 "GoldWandAmmo"
  Weapon.AmmoUse1 1  
  Weapon.AmmoUse2 1  
  Tag "Dual Elven Wands"
  States
  {
  Spawn:
    GWAN A -1
    Stop
  Ready:
    GWN2 A 1 A_WeaponReady
    Loop
  Deselect:
    GWN2 A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    GWN2 A 1 { A_Raise; A_Raise; }
    Loop
  Fire: // 11 Frames
    GWN2 B 3 
    GWN2 CD 5 // A_FireGoldWandPL1
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/wandhit",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(6+random(1,8)),"GoldWandPuff1",1);
	 }
	}
    GWN2 E 3

    GWN2 E 0 A_ReFire
    Goto Ready
  AltFire: // 10 Frames
    GWN2 B 3 
    GWN2 CD 4 // A_FireGoldWandPL2
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/wandhit",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle-15);
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_SetAngle(angle-5.625);
 	  A_FireCustomMissile("GoldWandFX2",0,0);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
      A_SetAngle(angle+2.8125);
 	  A_FireBullets(0,0,1,random(1,8),"GoldWandPuff2",0);
 	  A_FireCustomMissile("GoldWandFX2",0,1);
      A_SetAngle(angle-5.625);
	 }
	}
    GWN2 E 3

    GWN2 E 0 A_ReFire
    Goto Ready
  }
}

ACTOR CrossbowNew : Crossbow replaces Crossbow
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoType1 "CrossbowAmmo"
  Weapon.AmmoType2 "CrossbowAmmo"
  States
  {
  Spawn:
    WBOW A 0 NoDelay
	{
	 if (CountInv("CrossbowNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualCrossbowNew");
	  A_FadeOut(1,1);
	 }
	}
    WBOW A 1
    Loop
  Ready:
    CRBW AAAAAABBBBBBCCCCCC 1 A_WeaponReady
    Loop
  Deselect:
    CRBW A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    CRBW A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    CRBW D 6 // A_FireCrossbowPL1
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
	 }
	}
    CRBW EFGH 3
    CRBW AB 4
    CRBW C 5 A_ReFire
    Goto Ready
  AltFire:
    CRBW D 5 // A_FireCrossbowPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
	 }
	}
    CRBW E 3
    CRBW F 2
    CRBW G 3
    CRBW H 2
    CRBW A 3
    CRBW B 3
    CRBW C 4 A_ReFire
    Goto Ready
  }
}

ACTOR DualCrossbowNew : CrossbowNew
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoType1 "CrossbowAmmo"
  Weapon.AmmoType2 "CrossbowAmmo"
  Tag "Dual Ethereal Crossbows"
  States
  {
  Spawn:
    WBOW A -1
    Stop
  Ready:
    CRBD AAAAAABBBBBBCCCCCC 1 A_WeaponReady
    Loop
  Deselect:
    CRBD A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    CRBD A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    CRBD DE 6 // A_FireCrossbowPL1
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile ("CrossbowFX1",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX3", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX3",  4.5, 0,  2, 3);
	 }
	}
    CRBD FGH 3
    CRBD AB 4
    CRBD C 5 A_ReFire
    Goto Ready
  AltFire:
    CRBD DE 5 // A_FireCrossbowPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      A_SetAngle(angle-15);
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireCustomMissile ("CrossbowFX2",    0, 1,  0, 3);
      A_FireCustomMissile ("CrossbowFX2", -4.5, 0, -2, 3);
      A_FireCustomMissile ("CrossbowFX2",  4.5, 0,  2, 3);
      A_FireCustomMissile ("CrossbowFX3",   -9, 0, -4, 3);
      A_FireCustomMissile ("CrossbowFX3",    9, 0,  4, 3);
	 }
	}
    CRBD F 3
    CRBD G 2
    CRBD H 3
    CRBD A 3
    CRBD B 3
    CRBD C 4 A_ReFire
    Goto Ready
  }
}

ACTOR DragonClawNew : Blaster replaces Blaster
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "BlasterAmmo"
  Weapon.AmmoType2 "BlasterAmmo"
  States
  {
  Spawn:
    WBLS A 0 NoDelay
	{
	 if (CountInv("DragonClawNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualDragonClawNew");
	  A_FadeOut(1,1);
	 }
	}
    WBLS A 1
    Loop
  Ready:
    BLSR A 1 A_WeaponReady
    Loop
  Deselect:
    BLSR A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    BLSR A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    BLSR BC 3
  Hold:
    BLSR D 2 // A_FireBlasterPL1
    {
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/blastershoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
	 }
	}
    BLSR CB 2
    BLSR A 0 A_ReFire
    Goto Ready
  AltFire:
    TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
    BLSR BC 0
  AltHold:
    BLSR D 3 
	{
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/blastershoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
  	  A_FireCustomMissile("BlasterFX1");
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
  	  A_FireCustomMissile("BlasterFX1");
      A_SetAngle(angle-15);
  	  A_FireCustomMissile("BlasterFX1");
      A_SetAngle(angle-15);
  	  A_FireCustomMissile("BlasterFX1");
      A_SetAngle(angle+15);
	 }
	 else
	 {
  	  A_FireCustomMissile("BlasterFX1");
	 }
	}
    BLSR CB 4
    BLSR A 0 A_ReFire
    Goto Ready
  }
}

ACTOR DualDragonClawNew : DragonClawNew
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "BlasterAmmo"
  Weapon.AmmoType2 "BlasterAmmo"
  Tag "Dual Dragon Claws"
  States
  {
  Spawn:
    WBLS A -1
    Stop
  Ready:
    DBLS A 1 A_WeaponReady
    Loop
  Deselect:
    DBLS A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    DBLS A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    DBLS BC 3
  Hold:
    DBLS DE 2 // A_FireBlasterPL1
    {
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/blastershoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      A_SetAngle(angle-15);
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(5.625,0,1,(4*random(1,8)),"BlasterPuff",1);
	 }
	}
    DBLS FG 2
    DBLS A 0 A_ReFire
    Goto Ready
  AltFire:
    DBLS BC 0
  AltHold:
    DBLS DE 3 
	{
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/blastershoot",1);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
  	  A_FireCustomMissile("BlasterFX1");
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
  	  A_FireCustomMissile("BlasterFX1");
      // Reset
      A_SetAngle(angle+15);
     }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
  	  A_FireCustomMissile("BlasterFX1");
      A_SetAngle(angle-15);
  	  A_FireCustomMissile("BlasterFX1");
      A_SetAngle(angle-15);
  	  A_FireCustomMissile("BlasterFX1");
      A_SetAngle(angle+15);
	 }
	 else
	 {
  	  A_FireCustomMissile("BlasterFX1");
	 }
	}
    DBLS FG 4
    DBLS A 0 A_ReFire
    Goto Ready
  }
}

ACTOR HellStaffNew : SkullRod replaces SkullRod
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "SkullRodAmmo"
  Weapon.AmmoType2 "SkullRodAmmo"

  States
  {
  Spawn:
    WSKL A -1
    Stop
  Ready:
    HROD A 1 A_WeaponReady
    Loop
  Deselect:
    HROD A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    HROD A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    HROD AB 4 // A_FireSkullRodPL1
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_FireCustomMissile("HornRodFX1");
	}
    HROD B 0 A_ReFire
    Goto Ready
  AltFire:
    HROD C 2
    HROD D 3
    HROD E 2
    HROD F 3
    HROD G 4 // A_FireSkullRodPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/hornrodpowshoot",1);
	 A_FireCustomMissile("HornRodFX2",0,1,0,0,1);
	}
    HROD F 2
    HROD E 3
    HROD D 2
    HROD C 2 A_ReFire
    Goto Ready
  }
}

ACTOR PhoenixRodNew : PhoenixRod replaces PhoenixRod
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 1
  Weapon.AmmoType1 "PhoenixRodAmmo"
  Weapon.AmmoType2 "PhoenixRodAmmo"

  States
  {
  Spawn:
    WPHX A -1
    Stop
  Ready:
    PHNX A 1 A_WeaponReady
    Loop
  Deselect:
    PHNX A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    PHNX A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    PHNX B 5
    PHNX C 7
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_FirePhoenixPL1;
	}
    PHNX DB 4
    PHNX B 0 A_ReFire
    Goto Ready
  AltFire:
    PHNX B 3 // A_InitPhoenixPL2
	{
     ACS_NamedExecuteWithResult("FlameCount",0,350);
	}
  AltHold:
    PHNX C 1 // A_FirePhoenixPL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_FireCustomMissile("PhoenixFX2",random(-2,2),0,random(-2,2),0,1,2);
	 A_PlaySound("weapons/phoenixpowshoot",1,1.0,1);
     ACS_NamedExecuteWithResult("FlameCount",1,-1);
	}
    PHNX B 0 A_JumpIf(ACS_NamedExecuteWithResult("FlameCount",2) < 1, "AltPowerdown")
    PHNX B 4 A_ReFire
  AltPowerdown:
    PHNX B 4 // A_ShutdownPhoenixPL2
	{
	 A_TakeInventory("PhoenixRodAmmo",1,TIF_NOTAKEINFINITE,AAPTR_PLAYER1);
     ACS_NamedExecuteWithResult("FlameCount",0,350);
	 A_StopSound(1);
	}
    Goto Ready
  }
}

ACTOR FiremaceNew : Mace replaces Mace
{
  Weapon.AmmoUse1 1
  Weapon.AmmoUse2 5
  Weapon.AmmoType1 "MaceAmmo"
  Weapon.AmmoType2 "MaceAmmo"

  States
  {
  Spawn:
    WMCE A -1
    Stop
  Ready:
    MACE A 1 A_WeaponReady
    Loop
  Deselect:
    MACE A 1 { A_Lower; A_Lower; }
    Loop
  Select:
    MACE A 1 { A_Raise; A_Raise; }
    Loop
  Fire:
    MACE B 4
  Hold:
    MACE CDEF 3
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
  	 A_FireMacePL1;
	}
    MACE C 4 A_ReFire
    MACE DEFB 4
    Goto Ready
  AltFire:
  AltHold:
    MACE B 4
    MACE D 4 // A_FireMacePL2
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 A_PlaySound("weapons/maceshoot",1);
	 A_FireCustomMissile("MaceFX4",0,1,0,0,1);
	}
    MACE B 4
    MACE A 8 A_ReFire
    Goto Ready
  }
}