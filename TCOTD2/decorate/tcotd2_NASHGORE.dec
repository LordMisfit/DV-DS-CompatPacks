//////////////
// NASHGORE //
//////////////
// Modify the internal Blood actor to spawn flying blood
actor NashGore_Blood : Blood replaces Blood
{
 game Doom
 states
 {
  Spawn:
  BLUD C 8
  BLUD B 8 A_SpawnItemEx("NashGore_FlyingBlood", 0, 0, 8, random(-4, 4), random(-4, 4), random(2, 5), 0, 15, 176) // [Nash] it used to use A_SpawnItem, but we're getting rid of that crap
  BLUD A 8
  stop
 }
}


// Blood sprite that flies outwards and leaves trails behind
actor NashGore_FlyingBlood
{
 game Doom
 scale 0.75
 health 1
 radius 8
 height 1
 mass 1
 +CORPSE
 +NOTELEPORT
 +NOBLOCKMAP
 states
 {
 Spawn:
  TNT1 A 0
  FBLD A 1 A_SpawnItem("NashGore_FlyingBloodTrail",0,0,0,1)
  FBLD A 1 
  FBLD A 1 A_SpawnItem("NashGore_FlyingBloodTrail",0,0,0,1)
  FBLD A 1
  FBLD B 1 A_SpawnItem("NashGore_FlyingBloodTrail",0,0,0,1)
  FBLD B 1
  FBLD B 1 A_SpawnItem("NashGore_FlyingBloodTrail",0,0,0,1)
  FBLD B 1
  FBLD C 1 A_SpawnItem("NashGore_FlyingBloodTrail",0,0,0,1)
  FBLD C 1
  FBLD C 1 A_SpawnItem("NashGore_FlyingBloodTrail",0,0,0,1)
  FBLD C 1
  FBLD D 1 A_SpawnItem("NashGore_FlyingBloodTrail",0,0,0,1)
  FBLD D 1
  FBLD D 1 A_SpawnItem("NashGore_FlyingBloodTrail",0,0,0,1)
  FBLD D 1
  loop
 Crash:
  TNT1 A 1 A_SpawnItem("NashGore_BloodSpot",0,0,0,1)
  stop
 }
}

actor NashGore_BloodSpot
{
 game Doom
 radius 12
 height 2
 mass 1
 +NOTELEPORT
 -NOBLOCKMAP
 states
 {
 Spawn:
  TNT1 A 0
  TNT1 A 0 A_PlaySound("bloodsplat")
  TNT1 A 0 A_Jump(64,4)
  TNT1 A 0 A_Jump(128,4)
  TNT1 A 0 A_Jump(192,4)
  TNT1 A 0 A_Jump(255,4)
  // make the blood spots stay on the ground. 1500 is the default duration.
  BSPT A 1500
  stop
  BSPT B 1500
  stop
  BSPT C 1500
  stop
  BSPT D 1500
  stop
 }
}

// Blood trails spawned by FlyingBlood
actor NashGore_FlyingBloodTrail
{
 game Doom
 scale 0.70
 mass 1
 +LOWGRAVITY
 +NOTELEPORT
 +NOBLOCKMAP
 states
 {
  Spawn:
  BTRL A 4
  BTRL B 4
  BTRL C 4
  BTRL D 4
  stop
 }
}

// Modify all the internal monsters
actor NashGore_ZombieMan : ZombieMan replaces ZombieMan
{
states
	{
	Death:
     POSS H 5
     POSS I 5 A_Scream
     POSS J 5 A_NoBlocking
     POSS K 5
	 POSS L -1
     //POSS L 1 A_SpawnItem("NashGore_ZombieManDeadBody",0,0,0,0)
     stop
	XDeath:
	 POSS M 0 A_SpawnDebris("NashGore_Gib9",0)
	 POSS M 0 A_SpawnDebris("NashGore_Gib10",0)
	 POSS M 0 A_SpawnDebris("NashGore_Gib11",0)
 	 POSS M 0 A_SpawnDebris("NashGore_Gib11",0)
	 POSS M 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     POSS M 5
	 POSS N 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     POSS N 5 A_XScream
	 POSS O 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     POSS O 5 A_NoBlocking
	 POSS P 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     POSS PQRST 5
     POSS U -1
     stop
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedSmall",0,0,0,0)
	 stop
	}
} 

actor NashGore_ShotgunGuy : ShotgunGuy replaces ShotgunGuy
{ 
states
	{
	XDeath:
	 SPOS M 0 A_SpawnDebris("NashGore_Gib9",0)
	 SPOS M 0 A_SpawnDebris("NashGore_Gib10",0)
	 SPOS M 0 A_SpawnDebris("NashGore_Gib11",0)
 	 SPOS M 0 A_SpawnDebris("NashGore_Gib11",0)
	 SPOS M 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     SPOS M 5
	 SPOS N 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     SPOS N 5 A_XScream
	 SPOS O 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     SPOS O 5 A_NoBlocking
	 SPOS P 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     SPOS PQRST 5
     SPOS U -1
     stop
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedSmall",0,0,0,0)
	 stop
	}
} 

actor NashGore_ChaingunGuy : ChaingunGuy replaces ChaingunGuy
{ 
states
	{
	XDeath:
	 CPOS O 0 A_SpawnDebris("NashGore_Gib9",0)
	 CPOS O 0 A_SpawnDebris("NashGore_Gib10",0)
	 CPOS O 0 A_SpawnDebris("NashGore_Gib11",0)
 	 CPOS O 0 A_SpawnDebris("NashGore_Gib11",0)	
	 CPOS O 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     CPOS O 5
	 CPOS P 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     CPOS P 5 A_XScream
	 CPOS Q 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     CPOS Q 5 A_NoBlocking
	 CPOS R 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     CPOS RS 5
     CPOS T -1
     stop
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedSmall",0,0,0,0)
	 stop
	}
} 

actor NashGore_DoomImp : DoomImp replaces DoomImp
{ 
states
	{
	XDeath:
	 TROO N 0 A_SpawnDebris("NashGore_Gib9",0)
	 TROO N 0 A_SpawnDebris("NashGore_Gib10",0)
	 TROO N 0 A_SpawnDebris("NashGore_Gib11",0)
 	 TROO N 0 A_SpawnDebris("NashGore_Gib11",0)
	 TROO N 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     TROO N 5
	 TROO O 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     TROO O 5 A_XScream
	 TROO P 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     TROO P 5
	 TROO Q 0 A_SpawnItem("NashGore_GibGenerator",0,0,0,0)
     TROO Q 5 A_NoBlocking
     TROO RST 5
     TROO U -1
     stop
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedSmall",0,0,0,0)
	 stop
	}
} 

actor NashGore_Demon : Demon replaces Demon
{
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedMedium",0,0,0,0)
	 stop
	}
} 

actor NashGore_Spectre : Spectre replaces Spectre
{ 
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedMedium",0,0,0,1)
	 stop
	}
} 

actor NashGore_LostSoul : LostSoul replaces LostSoul
{ 

} 

actor NashGore_Cacodemon : Cacodemon replaces Cacodemon
{ 
bloodcolor "12 2 F0"
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedMediumBlue",0,0,0,0)
	 stop
	}
} 

actor NashGore_HellKnight : HellKnight replaces HellKnight
{ 
bloodcolor "0 C8 0"
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedMediumGreen",0,0,0,0)
	 stop
	}
} 

actor NashGore_BaronOfHell : BaronOfHell replaces BaronOfHell
{ 
bloodcolor "0 C8 0"
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedMediumGreen",0,0,0,0)
	 stop
	}
} 

actor NashGore_Arachnotron : Arachnotron replaces Arachnotron
{ 
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedMedium",0,0,0,0)
	 stop
	}
} 

actor NashGore_PainElemental : PainElemental replaces PainElemental
{ 

} 

actor NashGore_Revenant : Revenant replaces Revenant
{ 
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedMedium",0,0,0,0)
	 stop
	}
} 

actor NashGore_Fatso : Fatso replaces Fatso
{ 
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedMedium",0,0,0,0)
	 stop
	}
} 

actor NashGore_Archvile : Archvile replaces Archvile
{ 
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedMedium",0,0,0,0)
	 stop
	}
} 

actor NashGore_SpiderMasterMind : SpiderMasterMind replaces SpiderMasterMind
{
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedLarge",0,0,0,0)
	 stop
	}
} 

actor NashGore_Cyberdemon : Cyberdemon replaces Cyberdemon
{ 
states
	{
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedLarge",0,0,0,0)
	 stop
	}
} 

actor NashGore_WolfensteinSS : WolfensteinSS replaces WolfensteinSS
{

}

// Stealth monsters
ACTOR NashGore_StealthArachnotron : StealthArachnotron replaces StealthArachnotron
{}

ACTOR NashGore_StealthArchvile : StealthArchvile replaces StealthArchvile
{}

ACTOR NashGore_StealthBaron : StealthBaron replaces StealthBaron
{ bloodcolor "0 C8 0" }

ACTOR NashGore_StealthCacodemon : StealthCacodemon replaces StealthCacodemon
{ bloodcolor "12 2 F0" }

ACTOR NashGore_StealthChaingunGuy : StealthChaingunGuy replaces StealthChaingunGuy
{}

ACTOR NashGore_StealthDemon : StealthDemon replaces StealthDemon
{}

ACTOR NashGore_StealthHellKnight : StealthHellKnight replaces StealthHellKnight
{ bloodcolor "0 C8 0" }

ACTOR NashGore_StealthDoomImp : StealthDoomImp replaces StealthDoomImp
{}

ACTOR NashGore_StealthFatso : StealthFatso replaces StealthFatso
{}

ACTOR NashGore_StealthRevenant : StealthRevenant replaces StealthRevenant
{}

ACTOR NashGore_StealthShotgunGuy : StealthShotgunGuy replaces StealthShotgunGuy
{}

ACTOR NashGore_StealthZombieMan : StealthZombieMan replaces StealthZombieMan
{}


/***** MONSTERS' DEAD BODIES *****/

/*
// ZombieMan
actor NashGore_ZombieManDeadBody
{
health 50
+ISMONSTER
+SHOOTABLE
+CORPSE
states
	{
    Spawn:
     POSS L -1
     stop
   	Raise:
     POSS KJIH 5
	 TNT1 A 1 A_SpawnItem("NashGore_Zombieman",0,0,0,0)
	 stop
	Death:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedSmall",0,0,0,0)
     stop
	Crush:
	 TNT1 A 1 A_SpawnItem("NashGore_CrushedSmall",0,0,0,0)
	 stop
	}
}
*/

/**** CRUSHED DEAD BODIES ****/

// small
actor NashGore_CrushedSmall
{
states
	{
	Spawn:
	 CRS1 A -1
	 loop
	}
}

// medium
actor NashGore_CrushedMedium
{
states
	{
	Spawn:
	 CRS2 A -1
	 loop
	}
}

// large
actor NashGore_CrushedLarge
{
states
	{
	Spawn:
	 CRS3 A -1
	 loop
	}
}

// TRANSLATED CRUSHED BODIES
actor NashGore_CrushedMediumGreen : NashGore_CrushedMedium
{
translation "16:47=112:127","168:191=112:127"
}

actor NashGore_CrushedMediumBlue : NashGore_CrushedMedium
{
translation "16:47=192:207","168:191=192:207"
}

/***** DECORATIONS *****/

// Bloody twitch -----------------------------------------------------------

ACTOR NashGore_BloodyTwitch : BloodyTwitch replaces BloodyTwitch
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Meat 2 ------------------------------------------------------------------

ACTOR NashGore_Meat2 : Meat2 replaces Meat2
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Meat 3 ------------------------------------------------------------------

ACTOR NashGore_Meat3 : Meat3 replaces Meat3
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Meat 4 ------------------------------------------------------------------

ACTOR NashGore_Meat4 : Meat4 replaces Meat4
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Meat 5 ------------------------------------------------------------------

ACTOR NashGore_Meat5 : Meat5 replaces Meat5
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Nonsolid meat -----------------------------------------------------------

ACTOR NashGore_NonsolidMeat2 : NashGore_Meat2 replaces NonsolidMeat2
{
   mass 999999999
   health -1
   +SHOOTABLE
}

ACTOR NashGore_NonsolidMeat3 : NashGore_Meat3 replaces NonsolidMeat3
{
   mass 999999999
   health -1
   +SHOOTABLE
}

ACTOR NashGore_NonsolidMeat4 : NashGore_Meat4 replaces NonsolidMeat4
{
   mass 999999999
   health -1
   +SHOOTABLE
}

ACTOR NashGore_NonsolidMeat5 : NashGore_Meat5 replaces NonsolidMeat5
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Nonsolid bloody twitch --------------------------------------------------

ACTOR NashGore_NonsolidTwitch : NashGore_BloodyTwitch replaces NonsolidTwitch
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Dead on a stick ---------------------------------------------------------

ACTOR NashGore_DeadStick : DeadStick replaces DeadStick
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Still alive on a stick --------------------------------------------------

ACTOR NashGore_LiveStick : LiveStick replaces LiveStick
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Hanging with no guts ----------------------------------------------------

ACTOR NashGore_HangNoGuts : HangNoGuts replaces HangNoGuts
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Hanging from bottom with no brain ---------------------------------------

ACTOR NashGore_HangBNoBrain : HangBNoBrain replaces HangBNoBrain
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Hanging from top, looking down ------------------------------------------

ACTOR NashGore_HangTLookingDown : HangTLookingDown replaces HangTLookingDown
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Hanging from top, looking up --------------------------------------------

ACTOR NashGore_HangTLookingUp : HangTLookingUp replaces HangTLookingUp
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Hanging from top, skully ------------------------------------------------

ACTOR NashGore_HangTSkull : HangTSkull replaces HangTSkull
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Hanging from top without a brain ----------------------------------------

ACTOR NashGore_HangTNoBrain : HangTNoBrain replaces HangTNoBrain
{
   mass 999999999
   health -1
   +SHOOTABLE
}

// Gib generator fixed by LilWhiteMouse - thanks LWM!
actor NashGore_GibGenerator 
{ 
states 
	{ 
	Spawn: 
     TNT1 A 0 
     TNT1 A 0 A_Jump(128, 8) 
     TNT1 A 0 A_Jump(128, 4) 
     TNT1 A 0 A_Jump(128, 2) 
     TNT1 A 1 A_SpawnDebris("NashGore_Gib1") 
     stop 
	 TNT1 A 1 A_SpawnDebris("NashGore_Gib2") 
     stop 
     TNT1 A 0 A_Jump(128, 2) 
     TNT1 A 1 A_SpawnDebris("NashGore_Gib3") 
     stop 
     TNT1 A 1 A_SpawnDebris("NashGore_Gib4") 
     stop 
     TNT1 A 0 A_Jump(128, 4) 
     TNT1 A 0 A_Jump(128, 2) 
     TNT1 A 1 A_SpawnDebris("NashGore_Gib5") 
     stop 
     TNT1 A 1 A_SpawnDebris("NashGore_Gib6") 
     stop 
     TNT1 A 0 A_Jump(128, 2) 
     TNT1 A 1 A_SpawnDebris("NashGore_Gib7") 
     stop 
     TNT1 A 1 A_SpawnDebris("NashGore_Gib8") 
     stop 
   } 
} 

/*
// Gib generator
actor NashGore_GibGenerator
{
states
	{
	Spawn:
	TNT1 A 0
	TNT1 A 1 A_Jump(32,8)
	TNT1 A 1 A_Jump(64,9)
	TNT1 A 1 A_Jump(96,10)
	TNT1 A 1 A_Jump(128,11)
	TNT1 A 1 A_Jump(160,12)
	TNT1 A 1 A_Jump(192,13)
	TNT1 A 1 A_Jump(224,14)
	TNT1 A 1 A_Jump(255,15)
	TNT1 A 1 A_SpawnDebris("NashGore_Gib1")
	TNT1 A 1 A_Jump(255,15)
	TNT1 A 1 A_SpawnDebris("NashGore_Gib2")
	TNT1 A 1 A_Jump(255,13)
	TNT1 A 1 A_SpawnDebris("NashGore_Gib3")
	TNT1 A 1 A_Jump(255,11)
	TNT1 A 1 A_SpawnDebris("NashGore_Gib4")
	TNT1 A 1 A_Jump(255,9)
	TNT1 A 1 A_SpawnDebris("NashGore_Gib5")
	TNT1 A 1 A_Jump(255,7)
	TNT1 A 1 A_SpawnDebris("NashGore_Gib6")
	TNT1 A 1 A_Jump(255,5)
	TNT1 A 1 A_SpawnDebris("NashGore_Gib7")
	TNT1 A 1 A_Jump(255,3)
	TNT1 A 1 A_SpawnDebris("NashGore_Gib8")
	TNT1 A 1 A_Jump(255,1)
	TNT1 A 1
	stop
	}
}
*/

// Gib 1
actor NashGore_Gib1
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIB1 A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIB1 A -1
	 stop
	}
}

// Gib 2
actor NashGore_Gib2
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIB2 A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIB2 A -1
	 stop
	}
}

// Gib 3
actor NashGore_Gib3
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIB3 A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIB3 A -1
	 stop
	}
}

// Gib 4
actor NashGore_Gib4
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIB4 A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIB4 A -1
	 stop
	}
}

// Gib 5
actor NashGore_Gib5
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIB5 A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIB5 A -1
	 stop
	}
}

// Gib 6
actor NashGore_Gib6
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIB6 A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIB6 A -1
	 stop
	}
}

// Gib 7
actor NashGore_Gib7
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIB7 A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIB7 A -1
	 stop
	}
}

// Gib 8
actor NashGore_Gib8
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIB8 A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIB8 A -1
	 stop
	}
}

// Gib 9 (hand)
actor NashGore_Gib9
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIB9 A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIB9 A -1
	 stop
	}
}

// Gib 10 (arm)
actor NashGore_Gib10
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIB0 A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIB0 A -1
	 stop
	}
}

// Gib 11 (eyeball)
actor NashGore_Gib11
{
health 1
radius 8
height 8
mass 1
scale 0.75
+CORPSE
+NOTELEPORT
states
	{
	Spawn:
	 GIBI A 8 A_SpawnDebris("NashGore_FlyingBlood",1)
	 loop
	Crash:
	 GIBI A -1
	 stop
	}
}

actor Alert
{ 
States 
   { 
   Spawn: 
    TNT1 A 0 A_Look
    TNT1 A 8 A_AlertMonsters 
    Loop 
   } 
} 
