//////////////////////
// SOURCE GUARDIANS //
//////////////////////
ACTOR SourceGuardian : AetheriusBossZSC 16999 
{
	Tag "\cgGuardian of the Source"
	SpawnID 239
	Health 9600 // 1200
	Mass 80000 // 8000
	Radius 40
	Height 140
	Scale 1.1
	Speed 10
	PainChance 16
	Painchance "Fist", 24 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 40 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 24 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Fire", 0.25
	Painchance "Fire", 4
	DamageFactor "Holy", 1.333
	Painchance "Holy", 21
	MONSTER 
	+FLOORCLIP
	+DONTHARMSPECIES
	SeeSound "cycloid/sight"
	AttackSound "cycloid/attack"
	PainSound "cycloid/pain"
	DeathSound "cycloid/death"
	ActiveSound "cycloid/active"
	Obituary "%o was burned to cinders by a Source Guardian."
	Species "SourceGuardian"
	DropItem "SourceLifeSeed"
	DropItem "DoomSpellMana" 16
	DropItem "DiarisArrow" 8
	DropItem "DoomSpellMana2" 4
	DropItem "DoomSpellMana3" 1

	States
	{
		Pain.Charm: goto See
		Spawn:
			CYCL AAAABBBB 5
			{
				user_nolegendarytrans == 1;
				A_Look;
			}
			Loop
		See:
			CYCL A 0
			{
				user_shotsfired == 0;
				user_nolegendarytrans == 1;
			}
			CYCL AAAABBBBCCCCDDDD 3 
			{
				if (levelbehavior > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
				if (levelbehavior > 0 && user_monsterlevel > 90) { A_SetTics(2); }
				A_Chase;
			}
			Loop
		Missile:
			TNT1 A 0
			CYCL A 0 A_Jump(128, "Missile2")
			CYCL A 0 A_Jump(128, "Missile3")
		Missile1:
			CYCL E 12
			{
				A_FaceTarget;
				if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 150) { A_SetTics(7); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 90) { A_SetTics(9); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(10); }
				else if (levelbehavior > 0 && user_monsterlevel > 30) { A_SetTics(11); }
			}
			CYCL F 8
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget;

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("SourceGuardianDetonator", "SourceGuardianDetonatorCrisis", 64, 0, 16, 0);
				if (levelbehavior > 0 && user_monsterlevel > 150) { A_CrisisSpawnProjectile("SourceGuardianDetonator", "SourceGuardianDetonatorCrisis", 64, 0, 0, 0); }
			}
			CYCL E 12
			{
				A_FaceTarget;
				if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 150) { A_SetTics(7); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 90) { A_SetTics(9); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(10); }
				else if (levelbehavior > 0 && user_monsterlevel > 30) { A_SetTics(11); }
			}
			CYCL F 8
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget;

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("SourceGuardianDetonator", "SourceGuardianDetonatorCrisis", 64, 0, -16, 0);
				if (levelbehavior > 0 && user_monsterlevel > 150) { A_CrisisSpawnProjectile("SourceGuardianDetonator", "SourceGuardianDetonatorCrisis", 64, 0, 0, 0); }
			}
			CYCL E 12
			{
				A_FaceTarget;
				if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 150) { A_SetTics(7); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 90) { A_SetTics(9); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(10); }
				else if (levelbehavior > 0 && user_monsterlevel > 30) { A_SetTics(11); }
			}
			CYCL F 8
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(4); }
				else if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(5); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(7); }
				A_FaceTarget;
				
				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("SourceGuardianDetonator", "SourceGuardianDetonatorCrisis", 64, 0, 0, 0);
				if (levelbehavior > 0 && user_monsterlevel > 150) { A_CrisisSpawnProjectile("SourceGuardianDetonator", "SourceGuardianDetonatorCrisis", 64, 0, 8, 0); }
				if (levelbehavior > 0 && user_monsterlevel > 150) { A_CrisisSpawnProjectile("SourceGuardianDetonator", "SourceGuardianDetonatorCrisis", 64, 0, -8, 0); }
			}
			CYCL F 0 BRIGHT A_Jump(64, "Missile1")
			goto See
		Missile2:
			CYCL G 12
			{
				A_FaceTarget;
				if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 150) { A_SetTics(7); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 90) { A_SetTics(9); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(10); }
				else if (levelbehavior > 0 && user_monsterlevel > 30) { A_SetTics(11); }
			}
			CYCL HHHHHH 6 BRIGHT 
			{
				if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;

				A_MonsterCrisisCheck; // Multiple Projectiles
				A_CrisisSpawnProjectile("CatharsiBall", "CatharsiBallCrisis", 70, 0, 0, 1);	
				A_CrisisSpawnProjectile("CatharsiBall", "CatharsiBallCrisis", 70, -8, 8, 1);	
				A_CrisisSpawnProjectile("CatharsiBall", "CatharsiBallCrisis", 70, 8, -8, 1);
				if (levelbehavior > 0 && user_monsterlevel > 150) 
				{
					A_CrisisSpawnProjectile("CatharsiBall", "CatharsiBallCrisis", 70, -16, 16, 1);	
					A_CrisisSpawnProjectile("CatharsiBall", "CatharsiBallCrisis", 70, 16, -16, 1);	
				}
				if (levelbehavior > 0 && user_monsterlevel > 300) 
				{
					A_CrisisSpawnProjectile("CatharsiBall", "CatharsiBallCrisis", 70, -24, 24, 1);	
					A_CrisisSpawnProjectile("CatharsiBall", "CatharsiBallCrisis", 70, 24, -24, 1);	
				}
			}
			goto See
		Missile3:
			CYCL E 6 BRIGHT
			{
				if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(4); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(5); }
				A_FaceTarget;
			}
		Missile3Loop:
			CYCL FFFFFFFFFFFFFFFFFFFF 1 BRIGHT
			{
				A_FaceTarget;
				A_MonsterCrisisCheck; // Single Projectile
				if (levelbehavior > 0 && user_monsterlevel > 300) 
				{
					A_CrisisSpawnProjectile("SGuardianFlameBreath", "SGuardianFlameBreathCrisis", random(42,46), 0, 2*random(-4,4));
				}
				else if (levelbehavior > 0 && user_monsterlevel > 150) 
				{
					A_CrisisSpawnProjectile("SGuardianFlameBreath", "SGuardianFlameBreathCrisis", random(42,46), 0, 2*random(-4,4));
				}
				A_CrisisSpawnProjectile("SGuardianFlameBreath", "SGuardianFlameBreathCrisis", random(42,46), 0, 2*random(-4,4));
			}
			CYCL F 0 BRIGHT A_Jump(64, "See")
			CYCL F 0 BRIGHT A_SpidRefire
			loop
		Pain:
			CYCL I 6
			CYCL I 6 A_Pain
			Goto See
		Pain.Fist:
			CYCL I 6
			CYCL I 6 A_Pain
			CYCL II 6
			Goto See
		Pain.Kick:
			CYCL I 6
			CYCL I 6 A_Pain
			CYCL IIII 6
			Goto See
		Ice:
		XDeath:
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			CYCL I 12
			CYCL J 12 A_Scream
			CYCL J 0 A_FaceTarget
			CYCL K 12 A_Fall
			CYCL L 12
			CYCL M 12
			CYCL N 12
			CYCL O 12
			CYCL P 12
			CYCL Q 87
			CYCL Q 3 A_FadeOut(0.034) // starts to fade out after 2.5 seconds of being dead
			Wait
	}
}

ACTOR SGuardianFlameBreath : AetheriusProjectileZSC
{
	Damage (4)
	Radius 32
	Height 32
	Speed 16
	Projectile
	RenderStyle ADD
	ExplosionDamage 4
	ExplosionRadius 64
	DamageType "Fire"
	Scale 1.5
	Alpha 0.5
	+RIPPER
	+NODAMAGETHRUST
	+DONTHARMSPECIES
	+MTHRUSPECIES
	DontHurtShooter
	Species "SourceGuardian"
	SeeSound "duke/flame"

	States
	{
		Spawn:
			FRFX ABCDEFGHIJKLMMNOP 3 BRIGHT 
			{
				A_Explode(4, 64, 0, 0, 32);
			}
			Stop
	}
}
ACTOR SGuardianFlameBreathCrisis : SGuardianFlameBreath
{
	Damage (4 * CallACS("CrisisMultiplier"))
	States
	{
		Spawn:
			FRFX ABCDEFGHIJKLMMNOP 3 BRIGHT 
			{
				A_GenerateCrisisParticle;
				A_Explode((4 * CallACS("CrisisMultiplier")), 64, 0, 0, 32);
			}
			Stop
	}
}

ACTOR SourceGuardianDetonator : AetheriusProjectileZSC
{
	var int user_angleshots;
	var int user_angleshotsmax;
	var int user_angleshotsangle;
	var int user_detonationtimer;
	Radius 6
	Height 8
	Speed 20
	SEESOUND "cycloid/bounce"
	DEATHSOUND "catharsi/shotdth"
	PROJECTILE
	-SHOOTABLE
	+DOOMBOUNCE
	+RANDOMIZE
	-NOGRAVITY
	states
	{
		Spawn:
			THR2 A 4 
			{
				A_PlaySound("catharsi/thermtick");
			}
			THR2 BBBB 4
			THR2 B 0
			{
				user_detonationtimer + 1;
				if (user_detonationtimer >= 4) { return state("Death"); }
				return state("");
			}
			loop
		Death:
			SDFB B 0 
			{
				user_angleshots = 0;
				user_angleshotsmax = 36;
				user_angleshotsangle = 10;
			}
			SDFB B 0 
			{
				for (user_angleshots = 0; user_angleshots < user_angleshotsmax; user_angleshots++)
				{
					A_SpawnProjectile("CatharsiBall", 4, 0, user_angleshots*user_angleshotsangle, CMF_AIMOFFSET | CMF_TRACKOWNER | CMF_OFFSETPITCH | CMF_BADPITCH, 4);
				}
			}
			SDFB BCDE 6 BRIGHT A_Die
			stop
	}
}
ACTOR SourceGuardianDetonatorCrisis : SourceGuardianDetonator
{
	states
	{
		Spawn:
			THR2 A 4 
			{
				A_GenerateCrisisParticle;
				A_PlaySound("catharsi/thermtick");
			}
			THR2 BBBB 4
			{
				A_GenerateCrisisParticle;
			}
			THR2 B 0
			{
				user_detonationtimer + 1;
				if (user_detonationtimer >= 4) { return state("Death"); }
				return state("");
			}
			loop
		Death:
			SDFB B 0 
			{
				user_angleshots = 0;
				user_angleshotsmax = 36;
				user_angleshotsangle = 10;
			}
			SDFB B 0 
			{
				for (user_angleshots = 0; user_angleshots < user_angleshotsmax; user_angleshots++)
				{
					A_SpawnProjectile("CatharsiBallCrisis", 4, 0, user_angleshots*user_angleshotsangle, CMF_AIMOFFSET | CMF_TRACKOWNER | CMF_OFFSETPITCH | CMF_BADPITCH, 4);
				}
			}
			SDFB BCDE 6 BRIGHT A_Die
			stop
	}
}

actor SourceLifeSeed : AetheriusCustomInventory 16998
{
	radius 20
	height 16
	inventory.pickupmessage "Picked up a source guardian's life seed."
	//inventory.amount 25
	+FLOATBOB
	states
	{
		Spawn:
			REGN ABCD 4
			loop
		Success:
			TNT1 A 0 
			{
				A_PickupMedicalItem(-1,1);
			}
			Stop
		Pickup:
			TNT1 A 0 
			{
				if (A_CheckHealthLevels(1) > 0) { return state("Success"); } return state(""); 
			}
			Fail
	}
}



///////////////////////
// MAIN ACTOR SOURCE //
///////////////////////

actor TheSource : AetheriusBossZSC 24999
{
	Tag "\cfThe Source of All Evil"
	health 450000 // 15000
	radius 256 // 128
	height 256 // 128
	mass 99999999
	speed 0
	renderstyle add
	scale 1.3
	painchance 10
	Painchance "Fist", 15 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 25 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 15 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Fire", 0.1
	Painchance "Fire", 1
	DamageFactor "Holy", 1.5
	Painchance "Holy", 15

	seesound "source/sight"
	attacksound "source/attack"
	painsound "source/pain"
	deathsound "source/death"
	activesound "source/active"
	obituary "%o fell against the source of all evil."
	MONSTER
	+BOSS
	+NOGRAVITY
	+NOBLOOD
	+DONTTHRUST
	states
	{
		Pain.Charm: goto See
		Spawn:
			SOUR A 10
			{
				user_nolegendarytrans == 1;
				A_Look;
			}
			loop
		See:
			//SOUR A 0 Thing_ChangeTID(0,1222);
			SOUR A 10 
			{
				user_nolegendarytrans == 1;
				A_Chase;
			}
			loop
		Missile:
			TNT1 A 0
			{
				user_nolegendarytrans == 1;
			}
			SOUR A 0 A_Jump(256,"QuakeAttack","CometAttack","FireBreath")
		QuakeAttack:
			SOUR A 35
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(18); }
				else if (levelbehavior > 0 && user_monsterlevel > 228) { A_SetTics(19); }
				else if (levelbehavior > 0 && user_monsterlevel > 216) { A_SetTics(20); }
				else if (levelbehavior > 0 && user_monsterlevel > 204) { A_SetTics(21); }
				else if (levelbehavior > 0 && user_monsterlevel > 192) { A_SetTics(22); }
				else if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(23); }
				else if (levelbehavior > 0 && user_monsterlevel > 168) { A_SetTics(24); }
				else if (levelbehavior > 0 && user_monsterlevel > 156) { A_SetTics(25); }
				else if (levelbehavior > 0 && user_monsterlevel > 144) { A_SetTics(26); }
				else if (levelbehavior > 0 && user_monsterlevel > 132) { A_SetTics(27); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(28); }
				else if (levelbehavior > 0 && user_monsterlevel > 108) { A_SetTics(29); }
				else if (levelbehavior > 0 && user_monsterlevel > 96) { A_SetTics(30); }
				else if (levelbehavior > 0 && user_monsterlevel > 84) { A_SetTics(31); }
				else if (levelbehavior > 0 && user_monsterlevel > 72) { A_SetTics(32); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(33); }
				else if (levelbehavior > 0 && user_monsterlevel > 48) { A_SetTics(34); }

				ACS_Execute(130,0,0,0,0);
			}
			SOUR AAAAAAAAA 35 
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(18); }
				else if (levelbehavior > 0 && user_monsterlevel > 228) { A_SetTics(19); }
				else if (levelbehavior > 0 && user_monsterlevel > 216) { A_SetTics(20); }
				else if (levelbehavior > 0 && user_monsterlevel > 204) { A_SetTics(21); }
				else if (levelbehavior > 0 && user_monsterlevel > 192) { A_SetTics(22); }
				else if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(23); }
				else if (levelbehavior > 0 && user_monsterlevel > 168) { A_SetTics(24); }
				else if (levelbehavior > 0 && user_monsterlevel > 156) { A_SetTics(25); }
				else if (levelbehavior > 0 && user_monsterlevel > 144) { A_SetTics(26); }
				else if (levelbehavior > 0 && user_monsterlevel > 132) { A_SetTics(27); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(28); }
				else if (levelbehavior > 0 && user_monsterlevel > 108) { A_SetTics(29); }
				else if (levelbehavior > 0 && user_monsterlevel > 96) { A_SetTics(30); }
				else if (levelbehavior > 0 && user_monsterlevel > 84) { A_SetTics(31); }
				else if (levelbehavior > 0 && user_monsterlevel > 72) { A_SetTics(32); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(33); }
				else if (levelbehavior > 0 && user_monsterlevel > 48) { A_SetTics(34); }
			}
			goto Missile
		CometAttack:
			SOUR A 35
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(18); }
				else if (levelbehavior > 0 && user_monsterlevel > 228) { A_SetTics(19); }
				else if (levelbehavior > 0 && user_monsterlevel > 216) { A_SetTics(20); }
				else if (levelbehavior > 0 && user_monsterlevel > 204) { A_SetTics(21); }
				else if (levelbehavior > 0 && user_monsterlevel > 192) { A_SetTics(22); }
				else if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(23); }
				else if (levelbehavior > 0 && user_monsterlevel > 168) { A_SetTics(24); }
				else if (levelbehavior > 0 && user_monsterlevel > 156) { A_SetTics(25); }
				else if (levelbehavior > 0 && user_monsterlevel > 144) { A_SetTics(26); }
				else if (levelbehavior > 0 && user_monsterlevel > 132) { A_SetTics(27); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(28); }
				else if (levelbehavior > 0 && user_monsterlevel > 108) { A_SetTics(29); }
				else if (levelbehavior > 0 && user_monsterlevel > 96) { A_SetTics(30); }
				else if (levelbehavior > 0 && user_monsterlevel > 84) { A_SetTics(31); }
				else if (levelbehavior > 0 && user_monsterlevel > 72) { A_SetTics(32); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(33); }
				else if (levelbehavior > 0 && user_monsterlevel > 48) { A_SetTics(34); }

				ACS_Execute(131,0,0,0,0);
			}
			SOUR AAAAAAAAA 35 
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(18); }
				else if (levelbehavior > 0 && user_monsterlevel > 228) { A_SetTics(19); }
				else if (levelbehavior > 0 && user_monsterlevel > 216) { A_SetTics(20); }
				else if (levelbehavior > 0 && user_monsterlevel > 204) { A_SetTics(21); }
				else if (levelbehavior > 0 && user_monsterlevel > 192) { A_SetTics(22); }
				else if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(23); }
				else if (levelbehavior > 0 && user_monsterlevel > 168) { A_SetTics(24); }
				else if (levelbehavior > 0 && user_monsterlevel > 156) { A_SetTics(25); }
				else if (levelbehavior > 0 && user_monsterlevel > 144) { A_SetTics(26); }
				else if (levelbehavior > 0 && user_monsterlevel > 132) { A_SetTics(27); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(28); }
				else if (levelbehavior > 0 && user_monsterlevel > 108) { A_SetTics(29); }
				else if (levelbehavior > 0 && user_monsterlevel > 96) { A_SetTics(30); }
				else if (levelbehavior > 0 && user_monsterlevel > 84) { A_SetTics(31); }
				else if (levelbehavior > 0 && user_monsterlevel > 72) { A_SetTics(32); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(33); }
				else if (levelbehavior > 0 && user_monsterlevel > 48) { A_SetTics(34); }
			}
			goto Missile
		FireBreath:
			SOUR A 35
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(18); }
				else if (levelbehavior > 0 && user_monsterlevel > 228) { A_SetTics(19); }
				else if (levelbehavior > 0 && user_monsterlevel > 216) { A_SetTics(20); }
				else if (levelbehavior > 0 && user_monsterlevel > 204) { A_SetTics(21); }
				else if (levelbehavior > 0 && user_monsterlevel > 192) { A_SetTics(22); }
				else if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(23); }
				else if (levelbehavior > 0 && user_monsterlevel > 168) { A_SetTics(24); }
				else if (levelbehavior > 0 && user_monsterlevel > 156) { A_SetTics(25); }
				else if (levelbehavior > 0 && user_monsterlevel > 144) { A_SetTics(26); }
				else if (levelbehavior > 0 && user_monsterlevel > 132) { A_SetTics(27); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(28); }
				else if (levelbehavior > 0 && user_monsterlevel > 108) { A_SetTics(29); }
				else if (levelbehavior > 0 && user_monsterlevel > 96) { A_SetTics(30); }
				else if (levelbehavior > 0 && user_monsterlevel > 84) { A_SetTics(31); }
				else if (levelbehavior > 0 && user_monsterlevel > 72) { A_SetTics(32); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(33); }
				else if (levelbehavior > 0 && user_monsterlevel > 48) { A_SetTics(34); }

				ACS_Execute(132,0,0,0,0);
			}
			SOUR AAAAAAAAA 35 
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(18); }
				else if (levelbehavior > 0 && user_monsterlevel > 228) { A_SetTics(19); }
				else if (levelbehavior > 0 && user_monsterlevel > 216) { A_SetTics(20); }
				else if (levelbehavior > 0 && user_monsterlevel > 204) { A_SetTics(21); }
				else if (levelbehavior > 0 && user_monsterlevel > 192) { A_SetTics(22); }
				else if (levelbehavior > 0 && user_monsterlevel > 180) { A_SetTics(23); }
				else if (levelbehavior > 0 && user_monsterlevel > 168) { A_SetTics(24); }
				else if (levelbehavior > 0 && user_monsterlevel > 156) { A_SetTics(25); }
				else if (levelbehavior > 0 && user_monsterlevel > 144) { A_SetTics(26); }
				else if (levelbehavior > 0 && user_monsterlevel > 132) { A_SetTics(27); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(28); }
				else if (levelbehavior > 0 && user_monsterlevel > 108) { A_SetTics(29); }
				else if (levelbehavior > 0 && user_monsterlevel > 96) { A_SetTics(30); }
				else if (levelbehavior > 0 && user_monsterlevel > 84) { A_SetTics(31); }
				else if (levelbehavior > 0 && user_monsterlevel > 72) { A_SetTics(32); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(33); }
				else if (levelbehavior > 0 && user_monsterlevel > 48) { A_SetTics(34); }
			}
			goto Missile
		Pain:
			SOUR A 35 A_Pain
			SOUR A 0 A_Jump(16,"Missile")
			goto See
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			SOUR A 0 A_NoGravity
			SOUR A 0 A_Scream
			SOUR AAAAAAAAAAAAAAAAAAAAAAAAAA 3 A_FadeOut
			stop
	}
}

/////////////////////////////
// STONE & ROCK PROJECTILE //
/////////////////////////////

ACTOR FallingRock1 : AetheriusProjectileZSC
{
	SpawnID 201
	Radius 8
	Height 12
	Speed 0
	Damage 6
	PROJECTILE
	SeeSound "misc/SRCRK1"
	DeathSound "misc/SRCRK2"
	States
	{
		Spawn:
			SRR1 A 4 A_Gravity
			goto Spawn
		Death:
			SRR1 A 2 
			TNT1 A 0 A_CustomMissile("FallingRockFrac1",0,0,60,2,40)
			TNT1 A 0 A_CustomMissile("FallingRockFrac2",0,0,120,2,40)
			TNT1 A 0 A_CustomMissile("FallingRockFrac3",0,0,180,2,40)
			TNT1 A 0 A_CustomMissile("FallingRockFrac1",0,0,240,2,40)
			TNT1 A 0 A_CustomMissile("FallingRockFrac2",0,0,300,2,40)
			TNT1 A 0 A_CustomMissile("FallingRockFrac3",0,0,0,2,40)           
			TNT1 A -1
			stop
	}
}

ACTOR FallingRock2 : AetheriusProjectileZSC
{
	SpawnID 202
	Radius 8
	Height 12
	Speed 0
	Damage 6
	PROJECTILE
	SeeSound "misc/SRCRK1"
	DeathSound "misc/SRCRK2"
	States
	{
		Spawn:
			SRR2 A 4 A_Gravity
			goto Spawn
		Death:
			SRR2 A 2 
			TNT1 A 0 A_CustomMissile("FallingRockFrac1",0,0,60,2,40)
			TNT1 A 0 A_CustomMissile("FallingRockFrac2",0,0,120,2,40)
			TNT1 A 0 A_CustomMissile("FallingRockFrac3",0,0,180,2,40)
			TNT1 A 0 A_CustomMissile("FallingRockFrac1",0,0,240,2,40)
			TNT1 A 0 A_CustomMissile("FallingRockFrac2",0,0,300,2,40)
			TNT1 A 0 A_CustomMissile("FallingRockFrac3",0,0,0,2,40)            
			TNT1 A -1
			stop
	}
}

ACTOR FallingRockFrac1 : AetheriusProjectileZSC
{
	Radius 4
	Height 4
	Speed 12
	Damage 2
	PROJECTILE
	States
	{
		Spawn:
			SRR3 A 4 A_Gravity
			goto Spawn
		Death:
			SRR3 A 300
			SRR3 AAAAAAAAAAAAAAAAAAAAAAAA 6 A_FadeOut
			stop
	}
}

ACTOR FallingRockFrac2 : FallingRockFrac1
{
	States
	{
		Spawn:
			SRR4 A 4 A_Gravity
			goto Spawn
		Death:
			SRR4 A 300
			SRR4 AAAAAAAAAAAAAAAAAAAAAAAA 6 A_FadeOut      
			stop
	}
}

ACTOR FallingRockFrac3 : FallingRockFrac1
{
	States
	{
		Spawn:
			SRR5 A 4 A_Gravity
			goto Spawn
		Death:
			SRR5 A 300
			SRR5 AAAAAAAAAAAAAAAAAAAAAAAA 6 A_FadeOut      
			stop
	}
}

/////////////////
// FIRE BREATH //
/////////////////
ACTOR FlameBreathSource : AetheriusProjectileZSC
{
	SpawnID 196
	Radius 16
	Height 1
	Speed 15
	RenderStyle ADD
	Scale 0.5
	DamageType "Fire"
	Projectile
	Damage (16)
	ExplosionDamage 16
	ExplosionRadius 62
	+RIPPER
	+NODAMAGETHRUST
	+DONTHARMSPECIES
	+MTHRUSPECIES
	DontHurtShooter
	Species "SourceGuardian"

	SeeSound "duke/flame2"

	States
	{
		Spawn:
			XPLO ABCDEFGHIJKLMN 3 BRIGHT 
			{
				A_Explode (16, 62, 0, 0, 31);
			}
			XPLO OPQRSTU 3 BRIGHT
			{
			}
			Stop
	}
}
///////////////////////////////////////////

ACTOR CatharsiBall : AetheriusProjectileZSC
{
	Radius 6
	Height 8
	Speed 15
	Damage (3 * random(1,8))
	RENDERSTYLE Add
	SEESOUND "catharsi/shotsit"
	DEATHSOUND "catharsi/shotdth"
	PROJECTILE
	+Randomize
	states
	{
		Spawn:
			SDFB A 2 BRIGHT
			Loop
		Death:
			SDFB BBCCDDEE 3 BRIGHT
			stop
	}
}
ACTOR CatharsiBallCrisis : CatharsiBall
{
	Damage (3 * random(1,8) * CallACS("CrisisMultiplier"))
	states
	{
		Spawn:
			SDFB A 2 BRIGHT
			{
				A_GenerateCrisisParticle;
			}
			Loop
		Death:
			SDFB BBCCDDEE 3 BRIGHT
			stop
	}
}

actor Comet : AetheriusProjectileZSC
{
	Radius 6
	Height 8
	Speed 10
	Damage 5
	SpawnID 250
	ExplosionDamage 60
	ExplosionRadius 120
	DamageType "Fire"
	Scale .55
	PROJECTILE
	SeeSound "comet/launch"
	DeathSound "comet/explosion"
	Decal Scorch
	States
	{
		Spawn:
			COMT A 0 NoDelay
			{
			}
		Idle:
			COMT AAAABBBBCCCC 1 Bright A_SpawnItemEx("CometTail", 0, 0, 0, 0, 0, 0, 0, 128)
			Loop
		Death:
			COMT D 3 Bright A_SpawnItemEx("CometDeathGlow", 0, 0, 0, 0, 0, 0, 0, 128)
			COMT E 3 Bright A_Explode(60,120)
			COMT E 0 A_SpawnItemEx("CometDeath", 0, 0, 0, 0, 0, 0, 0, 128)
			Stop
	}
}

//********************

actor CometTail
{
	PROJECTILE
	RENDERSTYLE ADD
	+NOCLIP
	ALPHA 0.4
	States
	{
	Spawn:
			FRTB ABCDEFGHI 1 Bright
			Stop
	}
}


//============================================================================
//
// Spider
//
//============================================================================
ACTOR TNTSpider : MaulotaurBase 10906
{
	Tag "Giant Spider"
	Radius 28
	Height 60
	Health 1800
	Mass 800
	Speed 16
	Damage 7
	Painchance 25
	Painchance "Fist", 38 // Fist attacks have a +50% chance of stunning an enemy
	Painchance "Kick", 63 // Kick attacks have a +150% chance of stunning an enemy
	Painchance "Gauntlets", 38 // Fist attacks have a +50% chance of stunning an enemy
	DamageFactor "Crush", 2.4
	Monster
	+DROPOFF
	+FLOORCLIP
	+BOSS
	+NORADIUSDMG
	+DONTMORPH
	+NOTARGET
	+BOSSDEATH
	+AVOIDMELEE
	SeeSound "minotaur/sight"
	AttackSound "minotaur/attack1"
	PainSound "minotaur/pain"
	DeathSound "minotaur/death"
	ActiveSound "minotaur/active"
	DropItem ""
	Obituary "A giant spider became %o's worst nightmare."
	Translation 2
	States
	{
		Spawn:
			MNTR A 0 NoDelay 
			MNTR AB 10 A_MinotaurLook
			goto Spawn+1
		Roam:
			MNTR A 0
			MNTR ABCD 5
			{
				A_SetInventory("MaulotaurChargeDefense",0);
				if (levelbehavior > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
				if (levelbehavior > 0 && user_monsterlevel > 45) { A_SetTics(4); }
				if (levelbehavior > 0 && user_monsterlevel > 90) { A_SetTics(3); }
				A_MinotaurRoam;
			}
			Loop
		See:
			MNTR A 0
			MNTR ABCD 5 
			{
				A_SetInventory("MaulotaurChargeDefense",0);
				if (levelbehavior > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
				if (levelbehavior > 0 && user_monsterlevel > 45) { A_SetTics(4); }
				if (levelbehavior > 0 && user_monsterlevel > 90) { A_SetTics(3); }
				A_MinotaurChase;
			}
			Loop
		Melee:
			TNT1 A 0 
			{
				A_SetInventory("MaulotaurChargeDefense",0);
			}
			MNTR V 10 
			{
				if (levelbehavior > 0 && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior > 0 && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior > 0 && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget;
			}
			MNTR W 7
			{
				if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(6); }
				A_FaceTarget;
			}
			MNTR X 12 
			{
				if (levelbehavior > 0 && user_monsterlevel > 90) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 67) { A_SetTics(9); }
				else if (levelbehavior > 0 && user_monsterlevel > 45) { A_SetTics(10); }
				else if (levelbehavior > 0 && user_monsterlevel > 23) { A_SetTics(11); }

				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("SpiderBiteProj2","SpiderBiteProj2Crisis",32,0,CMF_CHECKTARGETDEAD,0,AAPTR_TARGET); //A_MeleeAttack;
				//A_MinotaurAtk1(4*random(1,8), -16);
			}
			Goto See
		Missile:
			TNT1 A 0 
			{
				A_SetInventory("MaulotaurChargeDefense",0);
			}
			MNTR V 10
			{
				if (levelbehavior > 0 && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior > 0 && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior > 0 && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 40) { A_SetTics(9); }
				if (random(1,256) <= 170) { A_MinotaurDecide; }
			}
			MNTR Y 4
			{
				if (levelbehavior > 0 && user_monsterlevel > 80) { A_SetTics(2); }
				else if (levelbehavior > 0 && user_monsterlevel > 40) { A_SetTics(3); }
				A_FaceTarget;
			}
			MNTR Z 9 
			{
				if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(8); }
				A_MinotaurAtk2("MinotaurFX1","MinotaurFX1Crisis",5*random(1,8),3*random(1,8));
			}
			Goto See
		Hammer:
			TNT1 A 0 
			{
				A_SetInventory("MaulotaurChargeDefense",0);
			}
			MNTR V 10 
			{
				if (levelbehavior > 0 && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior > 0 && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior > 0 && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget;
			}
			MNTR W 7
			{
				if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(5); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(6); }
				A_FaceTarget;
			}
			MNTR X 12 
			{
				if (levelbehavior > 0 && user_monsterlevel > 90) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 67) { A_SetTics(9); }
				else if (levelbehavior > 0 && user_monsterlevel > 45) { A_SetTics(10); }
				else if (levelbehavior > 0 && user_monsterlevel > 23) { A_SetTics(11); }
				A_MinotaurAtk3(4*random(1,8), -16, "MinotaurFX2New", "MinotaurFX2Crisis");
			}
			Goto See
		HammerLoop:
			TNT1 A 0 
			{
				A_SetInventory("MaulotaurChargeDefense",0);
			}
			MNTR X 12
			{
				if (levelbehavior > 0 && user_monsterlevel > 90) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 67) { A_SetTics(9); }
				else if (levelbehavior > 0 && user_monsterlevel > 45) { A_SetTics(10); }
				else if (levelbehavior > 0 && user_monsterlevel > 23) { A_SetTics(11); }
			}
			Goto Hammer
		Charge:
			TNT1 A 0 
			{
				SetDamage(7+(user_monsterlevel/45));
				A_MonsterCrisisCheck; // Minotaur Charge
				if (user_canusecrisisatk == 1) 
				{
					A_PlayCrisisAtkSound;
					SetDamage((7+(user_monsterlevel/45))*CallACS("CrisisMultiplier"));
				}
			}
			MNTR U 2 A_MinotaurCharge
			Loop
		Pain:
			MNTR E 3
			MNTR E 6 A_Pain
			Goto See
		Pain.Fist:
			MNTR E 3
			MNTR E 6 A_Pain
			MNTR EE 3
			Goto See
		Pain.Kick:
			MNTR E 3
			MNTR E 6 A_Pain
			MNTR EEEE 3
			Goto See
		Ice:
		XDeath:
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			MNTR FG 5
			MNTR H 5 A_Scream
			MNTR IJKL 5
			MNTR M 5 
			{
				A_NoBlocking;
				A_CustomMissile("TNTSpiderSpawner",32,0,0);
				A_CustomMissile("TNTSpiderSpawner",32,0,72);
				A_CustomMissile("TNTSpiderSpawner",32,0,144);
				A_CustomMissile("TNTSpiderSpawner",32,0,216);
				A_CustomMissile("TNTSpiderSpawner",32,0,288);
			}
			MNTR OPQRS 5
			MNTR T -1 A_DVDSBossDeath
			Stop
		Raise:
			MNTR S 5 
			MNTR RQPOMLKJIHGF 5 
			goto See
	}
}

// Adding Maulotaur attackings being it's what the giant spider attacks with :V
ACTOR MinotaurFX1New : AetheriusProjectileZSC replaces MinotaurFX1 
{
	Damage (3 * random(1,8))
	DamageType "Fire"
	Radius 10
	Height 6
	Speed 20
	FastSpeed 26
	DamageType Fire
	Projectile
	-ACTIVATEIMPACT
	-ACTIVATEPCROSS
	RenderStyle Add
	States
	{
		Spawn:
			FX12 AAABBB 2 Bright
			Loop
		Death:
			FX12 CDEFGH 5 Bright
			Stop
	}
}
ACTOR MinotaurFX1Crisis : MinotaurFX1New
{
	Damage ((3 * random(1,8)) * CallACS("CrisisMultiplier"))
	States
	{
		Spawn:
			FX12 AAABBB 2 Bright
			{
				A_GenerateCrisisParticle;
			}
			Loop
		Death:
			FX12 CDEFGH 5 Bright
			Stop
	}
}

ACTOR MinotaurFX2New : MinotaurFX1New replaces MinotaurFX2 
{
	Damage (4 * random(1,8))
	DamageType "Fire" 
	Radius 5
	Height 12
	Speed 14
	FastSpeed 20
	+FLOORHUGGER
	ExplosionDamage 24
	DeathSound "minotaur/fx2hit"

	States
	{
		Spawn:
			FX13 A 2 Bright 
			{
				A_MntrFloorFire("MinotaurFX3New");
			}
			Loop
		Death:
			FX13 I 4 Bright 
			{
				A_Explode(24,64);
			}
			FX13 JKLM 4 Bright
			Stop
	}
}
ACTOR MinotaurFX2Crisis : MinotaurFX2New 
{
	Damage ((4 * random(1,8)) * CallACS("CrisisMultiplier"))
	States
	{
		Spawn:
			FX13 A 2 Bright 
			{
				A_MntrFloorFire("MinotaurFX3Crisis");
			}
			Loop
		Death:
			FX13 I 4 Bright 
			{
				A_Explode(24*CallACS("CrisisMultiplier"),64);
			}
			FX13 JKLM 4 Bright
			Stop
	}
}

ACTOR MinotaurFX3New : MinotaurFX2New replaces MinotaurFX3 
{
	DamageType "Fire" 
	Radius 8
	Height 16
	Speed 0
	DeathSound "minotaur/fx3hit"
	ExplosionDamage 128
	States
	{
		Spawn:
			FX13 DDCC 2 Bright
			FX13 BB 2 Bright
			FX13 B 1 Bright
			FX13 CC 2 Bright
			FX13 C 1 Bright
			FX13 DD 2 Bright
			FX13 D 1 Bright
			FX13 EE 2 Bright
			FX13 E 1 Bright
			FX13 FFGGHH 2 Bright
			Stop
		Death:
			FX13 I 4 Bright 
			{
				A_Explode(128,128);
			}
			FX13 JKLM 4 Bright
			Stop
	}
}
ACTOR MinotaurFX3Crisis : MinotaurFX3New
{
	States
	{
		Spawn:
			FX13 DDCC 2 Bright
			{
				A_GenerateCrisisParticle;
			}
			FX13 BB 2 Bright
			{
				A_GenerateCrisisParticle;
			}
			FX13 B 1 Bright
			FX13 CC 2 Bright
			{
				A_GenerateCrisisParticle;
			}
			FX13 C 1 Bright
			FX13 DD 2 Bright
			{
				A_GenerateCrisisParticle;
			}
			FX13 D 1 Bright
			FX13 EE 2 Bright
			{
				A_GenerateCrisisParticle;
			}
			FX13 E 1 Bright
			FX13 FFGGHH 2 Bright
			{
				A_GenerateCrisisParticle;
			}
			Stop
		Death:
			FX13 I 4 Bright 
			{
				A_Explode((128*CallACS("CrisisMultiplier")),128);
			}
			FX13 JKLM 4 Bright
			Stop
	}
}

// The spider spawner for when big spiders die. :V
ACTOR TNTSpiderSpawner
{
	+MISSILE
	+DOOMBOUNCE
	Translation 0
	Speed 16
	Damage 0
	Scale 0.25
	States
	{
		Spawn:
				MNTR AB 10
				Loop
		Death:
				TNT1 A 0 A_CustomMissile("TNTMiniSpider", 32, 0, 0)
				Stop
	}
}

ACTOR TNTMiniSpider : AetheriusMonsterZSC 22290
{
	//$Angled
	//$Color 12
	//$Category "TUTNT Monsters/Blood Style"
	Tag "Small Spider"

	Health 38
	Speed 15
	Radius 7
	Height 15
	Scale 0.25
	Translation 0
	DamageFactor "Crush", 24
	Damage 0 
	MeleeDamage 1
	MONSTER
	+FLOORCLIP
	seesound "littlespider/sight"
	attacksound "littlespider/attack"
	painsound "littlespider/pain"
	deathsound "littlespider/death"
	activesound "littlespider/sight"
	meleesound "littlespider/pain"
	States
	{
		Spawn:
			MNTR A 0 NoDelay 
			MNTR AB 6 A_Look
			goto Spawn+1
		See:
			MNTR A 0
			MNTR ABCD 4
			{
				if (levelbehavior > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
				if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(1); }
				else if (levelbehavior > 0 && user_monsterlevel > 60) { A_SetTics(3); }
				A_Chase;
			}
			Loop
		Missile:
			MNTR A 10 
			{
				if (levelbehavior > 0 && user_monsterlevel > 200) { A_SetTics(5); }
				else if (levelbehavior > 0 && user_monsterlevel > 160) { A_SetTics(6); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(7); }
				else if (levelbehavior > 0 && user_monsterlevel > 80) { A_SetTics(8); }
				else if (levelbehavior > 0 && user_monsterlevel > 40) { A_SetTics(9); }
				A_FaceTarget;
			}
			MNTR A 0 A_SkullAttack
			MNTR ABCD 2
			Goto Missile+2
		Melee:
			TNT1 A 0
			MNTR VW 3
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(2); }
				A_FaceTarget;
			}
			MNTR X 3
			{
				if (levelbehavior > 0 && user_monsterlevel > 240) { A_SetTics(1); }
				else if (levelbehavior > 0 && user_monsterlevel > 120) { A_SetTics(2); }

				A_MonsterCrisisCheck; // Single Projectile
				A_CrisisSpawnProjectile("SpiderBiteProj","SpiderBiteProjCrisis",16,0,0,CMF_CHECKTARGETDEAD,0,AAPTR_TARGET); //A_MeleeAttack;
			}
			Goto See

		Pain:
			Goto See
		XDeath:
		Death:
			TNT1 A 0 A_DVDSNormalDeath(-2,0,1)
			MNTS F 5
			MNTS E 5 A_Scream
			MNTS D 5
			MNTS C 5 A_NoBlocking
			MNTS B 5
			MNTS A -1 A_DVDSBossDeath
			Stop
	}
}

// Spider "Bites" to poison the player
ACTOR SpiderBiteProj : AetheriusEffectProjectile
{
	Damage (random(6,14))
	Radius 1
	Height 1
	Speed 22
	RENDERSTYLE NONE // ADD
	ALPHA 0.34
	Scale 0.125
	PROJECTILE
	Seesound ""
	DeathSound ""
	DamageType "Poison"
	Obituary "%o was poisoned by the bite of a tiny spider"
	States
	{
		Spawn:
			FVUL AA 1 Bright 
			stop
		Death:
			TNT1 A 0 Bright
			{
				if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
				{
					A_StatusEffectChecker(10);
					if (random(1,user_ailmentmaxchance) <= 7 && user_canafflict > 0)
					{
						ACS_NamedExecuteAlways("BuffTimer",0,8,16,random(35,105)); // Poison for 1-3 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					}
				}
				return state("");
			}
		Death2:
			FVUL CDEF 1 Bright
			stop
	}
}
ACTOR SpiderBiteProjCrisis : SpiderBiteProj
{
	Damage (random(6,14) * CallACS("CrisisMultiplier"))
	States
	{
		Spawn:
			FVUL AA 1 Bright 
			stop
		Death:
			TNT1 A 0 Bright
			{
				if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
				{
					A_StatusEffectChecker(10);
					if (random(1,user_ailmentmaxchance) <= 7 && user_canafflict > 0)
					{
						ACS_NamedExecuteAlways("BuffTimer",0,8,16, (random(35,105)*CallACS("CrisisMultiplier",5)) ); // Poison for 1-3 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					}
				}
				return state("");
			}
		Death2:
			FVUL CDEF 1 Bright
			stop
	}
}

ACTOR SpiderBiteProj2 : SpiderBiteProj
{
	Damage (random(9,21))
	Speed 33
	Obituary "%o was horribly poisoned by the bite of a giant spider"
	States
	{
	Spawn:
		FVUL AA 1 Bright 
		stop
	Death:
		TNT1 A 0 Bright
		{
			if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
			{
				A_StatusEffectChecker(20);
				if (random(1,user_ailmentmaxchance) <= 17 && user_canafflict > 0)
				{
					ACS_NamedExecuteAlways("BuffTimer",0,8,16,random(105,175)); // Poison for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
				}
			}
			return state("");
		}
	Death2:
		FVUL CDEF 1 Bright
		stop
	}
}
ACTOR SpiderBiteProj2Crisis : SpiderBiteProj2
{
	Damage ((random(9,21)) * CallACS("CrisisMultiplier"))
	Speed 33
	States
	{
		Spawn:
			FVUL AA 1 Bright 
			stop
		Death:
			TNT1 A 0 Bright
			{
				if (IsPointerEqual(AAPTR_MASTER, AAPTR_PLAYER1) == TRUE) 
				{
					A_StatusEffectChecker(20);
					if (random(1,user_ailmentmaxchance) <= 17 && user_canafflict > 0)
					{
						ACS_NamedExecuteAlways("BuffTimer",0,8,16, (random(105,175)*CallACS("CrisisMultiplier",5)) ); // Poison for 3-5 seconds [tics] (do not ignore God/Invuln/Mercy-Invuln)
					}
				}
				return state("");
			}
		Death2:
			FVUL CDEF 1 Bright
			stop
	}
}

ACTOR TUTNTEndPortal 23523
{
	//$Category Decoration
	States
	{
		Spawn:
			EPOR A -1
			Stop
	}
}
